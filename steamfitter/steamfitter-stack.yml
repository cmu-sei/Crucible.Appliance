version: '3.6'

services:
  steamfitter-api:
    image: ${REGISTRY_URL}${NAMESPACE}${REPO}steamfitter-api:${STEAM_API_TAG}
    command: bash -c "update-ca-certificates && dotnet Steamfitter.Api.dll"
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=true'
        - 'traefik.backend=steamfitter-api'
        - 'traefik.port=80'
        - 'traefik.docker.network=traefik-net'
        - 'traefik.frontend.rule=Host:steamfitter-api.${DOMAIN}'
        - 'traefik.frontend.entrypoints=http,https'
    networks:
      - utilities
      - traefik-net
    volumes:
      - sei-ca:/usr/local/share/ca-certificates
    logging:
      driver: 'json-file'
      options:
        max-size: '100m'
        max-file: '10'
    configs:
      - source: steamfitter-api-settings
        target: /app/appsettings.Production.json

  steamfitter-ui:
    image: ${REGISTRY_URL}${NAMESPACE}${REPO}steamfitter-ui:${STEAM_UI_TAG}
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=true'
        - 'traefik.backend=steamfitter-ui'
        - 'traefik.port=8080'
        - 'traefik.docker.network=traefik-net'
        - 'traefik.frontend.rule=Host:steamfitter.${DOMAIN}'
        - 'traefik.frontend.entrypoints=http,https'
    networks:
      - traefik-net
    logging:
      driver: 'json-file'
      options:
        max-size: '100m'
        max-file: '10'
    configs:
      - source: steamfitter-ui-settings
        target: /usr/share/nginx/html/assets/config/settings.env.json
      - source: steamfitter-ui-settings
        target: /usr/share/nginx/html/assets/config/settings.json

  stackstorm:
    image: stackstorm/stackstorm:3.1.0
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=true'
        - 'traefik.backend=stackstorm'
        - 'traefik.port=80'
        - 'traefik.docker.network=traefik-net'
        - 'traefik.frontend.rule=Host:stackstorm.${DOMAIN}'
        - 'traefik.frontend.entrypoints=http,https'
    # add back in to install packs, remove for vsphere-pack to function
    # because pyvmomi doesn't respect no_proxy
    # environment:
    #   https_proxy: http://proxy.sei.cmu.edu:8080
    #   http_proxy: http://proxy.sei.cmu.edu:8080
    #   no_proxy: localhost,127.0.0.1,.sei.cmu.edu,.cert.org
    env_file:
      - conf/stackstorm.env
      - conf/mongo.env
      - conf/rabbitmq.env
      - conf/postgres.env
      - conf/redis.env
    depends_on:
      - mongo
      - postgres
      - rabbitmq
      - redis
    networks:
      - traefik-net
      - utilities
      - private
    volumes:
      - sei-ca:/usr/local/share/ca-certificates
      - stackstorm-packs:/opt/stackstorm/packs
      - stackstorm-virtualenvs:/opt/stackstorm/virtualenvs
      - stackstorm-configs:/opt/stackstorm/configs
      - stackstorm-logs:/var/log
      - stackstorm-entry:/st2-docker/entrypoint.d
      - stackstorm-st2:/st2-docker/st2.d
    configs:
      # add back in to install packs, remove for vsphere-pack to function
      # because pyvmomi doesn't respect no_proxy
      # - source: stackstorm-proxy-settings
      #   target: /etc/default/st2actionrunner
      # - source: stackstorm-proxy-settings
      #   target: /etc/default/st2api

      - source: st2-nginx
        target: /etc/nginx/conf.d/st2.conf
      - source: stackstorm-vsphere-settings
        target: /opt/stackstorm/configs/vsphere.yaml
      - source: stackstorm-mongo-settings
        target: /st2-docker/env/mongo.env
      - source: stackstorm-postgres-settings
        target: /st2-docker/env/postgres.env
      - source: stackstorm-rabbitmq-settings
        target: /st2-docker/env/rabbitmq.env
      - source: stackstorm-redis-settings
        target: /st2-docker/env/redis.env
      - source: stackstorm-settings
        target: /st2-docker/env/stackstorm.env
    logging:
      driver: 'json-file'
      options:
        max-size: '100m'
        max-file: '10'
    dns_search: .

  ### ST2 External Services

  mongo:
    image: mongo:3.4
    env_file:
      - conf/mongo.env
    networks:
      - private
    volumes:
      - mongo-volume:/data/db
      - mongo-configdb-volume:/data/configdb
    logging:
      driver: 'json-file'
      options:
        max-size: '100m'
        max-file: '10'
    dns_search: .

  rabbitmq:
    image: rabbitmq:3.6-management
    env_file:
      - conf/rabbitmq.env
    networks:
      - private
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
    logging:
      driver: 'json-file'
      options:
        max-size: '100m'
        max-file: '10'
    dns_search: .

  redis:
    image: redis:4.0
    env_file:
      - conf/redis.env
    networks:
      - private
    volumes:
      - redis-volume:/data
    logging:
      driver: 'json-file'
      options:
        max-size: '100m'
        max-file: '10'
    dns_search: .
    command: [
        'bash',
        '-c',
        '
        docker-entrypoint.sh
        --requirepass "$$REDIS_PASSWORD"
        ',
      ]

### END ST2 External Services

volumes:
  mongo-volume:
  mongo-configdb-volume:
  rabbitmq-volume:
  redis-volume:
  sei-ca:
    driver_opts:
      type: 'nfs'
      o: 'addr=${NFS_SERVER},nolock,soft,rw'
      device: ':${NFS_BASE_PATH}certificates/sei-ca'
  stackstorm-packs:
    driver_opts:
      type: 'nfs'
      o: 'addr=${NFS_SERVER},nolock,soft,rw'
      device: ':${NFS_BASE_PATH}stackstorm/packs'
  stackstorm-virtualenvs:
    driver_opts:
      type: 'nfs'
      o: 'addr=${NFS_SERVER},nolock,soft,rw'
      device: ':${NFS_BASE_PATH}stackstorm/virtualenvs'
  stackstorm-configs:
    driver_opts:
      type: 'nfs'
      o: 'addr=${NFS_SERVER},nolock,soft,rw'
      device: ':${NFS_BASE_PATH}stackstorm/configs'
  stackstorm-logs:
    driver_opts:
      type: 'nfs'
      o: 'addr=${NFS_SERVER},nolock,soft,rw'
      device: ':${NFS_BASE_PATH}stackstorm/logs'
  stackstorm-entry:
    driver_opts:
      type: 'nfs'
      o: 'addr=${NFS_SERVER},nolock,soft,rw'
      device: ':${NFS_BASE_PATH}stackstorm/runtime/entrypoint.d'
  stackstorm-st2:
    driver_opts:
      type: 'nfs'
      o: 'addr=${NFS_SERVER},nolock,soft,rw'
      device: ':${NFS_BASE_PATH}stackstorm/runtime/st2.d'

networks:
  utilities:
    external: true
  traefik-net:
    external: true
  private:
    driver: overlay
    name: private

configs:
  st2-nginx:
    file: ./st2.conf
  steamfitter-api-settings:
    file: ./steamfitter-api-settings.json
  steamfitter-ui-settings:
    file: ./steamfitter-ui-settings.json
  foreman-settings:
    file: ./foreman-settings.json
  stackstorm-proxy-settings:
    file: ./proxy/proxy
  stackstorm-vsphere-settings:
    file: ./pack-configs/vsphere.yaml
  stackstorm-mongo-settings:
    file: ./conf/mongo.env
  stackstorm-postgres-settings:
    file: ./conf/postgres.env
  stackstorm-rabbitmq-settings:
    file: ./conf/rabbitmq.env
  stackstorm-redis-settings:
    file: ./conf/redis.env
  stackstorm-settings:
    file: ./conf/stackstorm.env
  stackstorm-vsphere-get-vms-with-uuid-py:
    file: ./pack-configs/actions/get_vms_with_uuid.py
  stackstorm-vsphere-get-vms-with-uuid-yaml:
    file: ./pack-configs/actions/get_vms_with_uuid.yaml
  stackstorm-vsphere-guest-process-run-fast-py:
    file: ./pack-configs/actions/guest_process_run_fast.py
  stackstorm-vsphere-guest-process-run-fast-yaml:
    file: ./pack-configs/actions/guest_process_run_fast.yaml
  guest-file-upload-content-py:
    file: ./pack-configs/actions/guest_file_upload_content.py
  guest-file-upload-content-yaml:
    file: ./pack-configs/actions/guest_file_upload_content.yaml
