upstream api_server {
  ip_hash;
  server localhost:3030 max_fails=3 fail_timeout=30s;
}

# this section is needed to proxy web-socket connections
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {

  listen 80;

  sendfile on;

  default_type application/octet-stream;


  gzip on;
  gzip_http_version 1.1;
  gzip_disable      "MSIE [1-6]\.";
  gzip_min_length   1100;
  gzip_vary         on;
  gzip_proxied      expired no-cache no-store private auth;
  gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_comp_level   9;


  root /app/dist;

  location @index {
        add_header Cache-Control no-cache;
        expires 0;
        try_files /index.html =404;
    }

  location / {
        try_files $uri @index;
  }
  
  location /socket.io {
      #access_log off;

      proxy_pass http://localhost:3030;
      proxy_buffers 16 32k;
      proxy_buffer_size 64k;
      proxy_busy_buffers_size 128k;
      proxy_cache_bypass $http_pragma $http_authorization;
      proxy_connect_timeout 59s;
      proxy_hide_header X-Powered-By;
      proxy_http_version 1.1;
      proxy_ignore_headers Cache-Control Expires;
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_404;
      proxy_no_cache $http_pragma $http_authorization;
      proxy_pass_header Set-Cookie;
      proxy_read_timeout 600;
      proxy_redirect off;
      proxy_send_timeout 600;
      proxy_temp_file_write_size 64k;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Accept-Encoding '';
      proxy_set_header Cookie $http_cookie;
      proxy_set_header Host $host;
      proxy_set_header Proxy '';
      proxy_set_header Referer $http_referer;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Original-Request $request_uri;
    }

    #location /api {
    #  return 302 $uri/;
    #}

    location /api/ {
      #access_log off;
      rewrite ^/api/(.*) /$1 break;

      proxy_pass http://api_server;

      proxy_http_version    1.1;
      proxy_redirect        off;
      proxy_buffering       off;
      proxy_cache           off;
      proxy_cache_bypass    $http_upgrade;
      add_header            Cache-Control no-cache;
      proxy_set_header      Upgrade $http_upgrade; #for websockets
      proxy_set_header      Connection $connection_upgrade;

      proxy_set_header      Host $host;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header      X-Real-IP  $remote_addr;
      proxy_set_header      X-Real-Scheme $scheme;
      proxy_set_header      X-Real-Host $host;
      proxy_set_header      X-Real-Uri $request_uri;
      proxy_set_header      User-Agent $http_user_agent;
      proxy_set_header      Referer $http_referer;

      proxy_pass_header     Authorization;
      proxy_pass_header     Set-Cookie;
    }
  
}